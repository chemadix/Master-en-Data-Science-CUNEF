"0","qu     = c(.05, .2, .35, .65, .8, .95)  # Chosen quantiles ensures 30% of the distribution each colour"
"0","nq     = length(qu)"
"0","fdates = seq.Date(tail(Data$Date,1), by = ""quarter"", length.out = nf + 1) # Forecast dates"
"0"," "
"0","forecast_data = tibble(Date     = rep(fdates, 2), "
"0","                       Variable = rep(colnames(Data)[-1], each = (nf + 1)), "
"0","                       Forecast = c(t(Yf[1:nv,])),"
"0","                       Variance = c(t(sqrt(Pf)))) %>% "
"0","  bind_cols(map(qu, qnorm, .$Forecast, .$Variance)) %>%         # Calculate quantiles"
"0","  select(-c(""Forecast"", ""Variance"")) %>% "
"0","  {bind_rows(select(., -(nq + 2)),                              # Drop last quantile "
"0","             select(., -3) %>%                                  # Drop first quantile"
"0","               arrange(Variable, desc(Date)) %>%                # Reverse order"
"0","               rename_at(-(1:2), ~ paste0(""V"",1:(nq - 1))) )} %>%  # Shift names of reversed ones "
"0","  pivot_longer(cols = -c(Date, Variable), names_to = ""Area"", values_to = ""Coordinates"") %>% "
"0","  unite(VarArea, Variable, Area, remove = FALSE) %>%              # Create variable to index polygons"
"0","  bind_rows(pivot_longer(tail(Data,nb), cols = -Date, names_to = ""Variable"", values_to = ""Backdata""), .)"
"0",""
